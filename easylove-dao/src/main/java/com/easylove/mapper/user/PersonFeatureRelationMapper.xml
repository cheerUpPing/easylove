<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.easylove.mapper.user.PersonFeatureRelationMapper">

    <sql id="baseColumn">
        id,tel,email,feature_id,add_time
    </sql>

    <resultMap id="baseMap" type="com.easylove.entity.user.PersonFeatureRelation">
        <id column="id" property="id" jdbcType="INTEGER" />
        <result column="tel" property="tel" jdbcType="VARCHAR" />
        <result column="email" property="email" jdbcType="VARCHAR" />
        <result column="feature_id" property="feature_id" jdbcType="VARCHAR" />
        <result column="add_time" property="addTime" jdbcType="TIMESTAMP"/>
    </resultMap>

    <resultMap id="baseMapVo" type="com.easylove.entity.user.PersonFeatureVo" extends="baseMap">
        <result column="feature_name" property="featureName" jdbcType="VARCHAR" />
        <result column="feature_type" property="featureType" jdbcType="VARCHAR" />
    </resultMap>

    <sql id="updateColumns">
        <if test="tel !=null">
            tel = #{tel},
        </if>
        <if test="email !=null">
            email = #{email},
        </if>
        <if test="featureId !=null">
            feature_id = #{featureId},
        </if>
        <if test="addTime !=null">
            add_time = #{addTime},
        </if>
    </sql>

    <select id="select" parameterType="java.lang.Integer" resultMap="baseMap">
        SELECT <include refid="baseColumn" /> FROM friend WHERE id = #{id}
    </select>
    <select id="selectByTel">
        SELECT <include refid="baseColumn" /> FROM  person_feature_relation WHERE tel = #{tel}
    </select>
    <select id="selectByEmail">
        SELECT <include refid="baseColumn" /> FROM  person_feature_relation WHERE email = #{email}
    </select>
    <select id="selectVoByTel" parameterType="java.lang.String" resultMap="baseMapVo">
        SELECT pfr.*,f.feature_name,f.feature_type FROM person_feature_relation pfr LEFT JOIN feature f on pfr.feature_id = f.id WHERE pfr.tel = #{tel}
    </select>
    <select id="selectVoByEmail" parameterType="java.lang.String" resultMap="baseMapVo">
        SELECT pfr.*,f.feature_name,f.feature_type FROM person_feature_relation pfr LEFT JOIN feature f on pfr.feature_id = f.id WHERE pfr.email = #{email}
    </select>

    <delete id="deleteByTel" parameterType="java.lang.String">
        DELETE FROM person_feature_relation WHERE tel = #{tel}
    </delete>
    <delete id="deleteByEmail" parameterType="java.lang.String">
        DELETE FROM person_feature_relation WHERE email = #{email}
    </delete>



</mapper>